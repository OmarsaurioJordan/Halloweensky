<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_movil</parentName>
  <maskName>d_base1</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>s_idweb(id);

// tipo de monstruo
tipo = m_ent_esqueleto;

// visual y animacion
sprite = d_esqueleto;
s_ani_ini(id, 3, 1);
reloj_pies = 0;
xi = x;
yi = y;

// estadisticas
vida = m_vida;

// para network sync
sacarlo = false;

// IA
reloj_errar = m_errar_s + random(m_errar_s);
moverse = choose(true, false);
direction = random(360);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// animacion
s_ani_osci(id, 0, 2.5, 5); // body
s_ani_osci(id, 1, 2.2, 3); // cara
s_ani_osci(id, 2, 1.9, 4); // objeto
s_ani_paso(id, 0, 0.15, 5); // pies

if servidor {
    
    // errar
    if s_errar_reloj(id) and random(1) &lt; 0.25 {
        //var cc = instance_find(o_casa, irandom(instance_number(o_casa) - 1));
        //direction = point_direction(x, y, cc.x, cc.y);
    }
    
    // IA
    if !s_colision(id) {
        // huir de la luz del dia
        if hora &lt; 127 {
            var d = point_direction(2048, 2048 + 250, x, y);
            var vel = m_velocidad * dlt;
            x += lengthdir_x(vel, d);
            y += lengthdir_y(vel, d);
            if point_distance(2048, 2048 + 250, x, y) &gt; 2000 {
                instance_destroy();
                exit;
            }
        }
        // vacilar en la noche
        else if moverse {
            var vel = m_velocidad * dlt;
            x += lengthdir_x(vel, direction);
            y += lengthdir_y(vel, direction);
        }
    }
}

// interpolacion y anima pies
s_limites(id);
if x == xprevious and y == yprevious {
    reloj_pies = max(0, reloj_pies - dlt);
}
else {
    reloj_pies = 0.25;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// pies
if reloj_pies == 0 {
    draw_sprite(sprite, 2, xi, yi);
    draw_sprite(sprite, 3, xi, yi);
}
else {
    var p1, p2;
    switch paso[0] {
        case 0: p1 = 0; p2 = 1; break;
        case 1: p1 = 0.3; p2 = 0.7; break;
        case 2: p1 = 0.7; p2 = 0.3; break;
        case 3: p1 = 1; p2 = 0; break;
        case 4: p1 = 0.7; p2 = 0.3; break;
        case 5: p1 = 0.3; p2 = 0.7; break;
    }
    draw_sprite(sprite, 2, xi, yi - p1 * 12);
    draw_sprite(sprite, 3, xi, yi - p2 * 12);
}
// cuerpo y cabeza
draw_sprite(sprite, 1, xi, yi + anima[0]);
draw_sprite(sprite, 0, xi, yi + anima[0] + anima[1]);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
